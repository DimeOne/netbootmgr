# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-10 23:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommonIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier_type', models.CharField(choices=[('make', 'Manufacturer'), ('model', 'Model'), ('gate', 'Gateway IP'), ('domain', 'DNS domain')], max_length=8, verbose_name='Identifier Type')),
                ('identifier', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Common Identifier',
            },
        ),
        migrations.CreateModel(
            name='CustomSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=64)),
                ('value', models.CharField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Type of Model that this Setting is for.', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Custom Setting',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField()),
                ('description', models.TextField(blank=True, help_text='Description for this Group', max_length=512, null=True)),
                ('common_identifiers', models.ManyToManyField(blank=True, help_text='Common Identifiers associated to this Group', to='hostdb.CommonIdentifier', verbose_name='Common Identifiers')),
            ],
            options={
                'verbose_name': 'Group',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.SlugField(help_text='Unique Name to identify this host', max_length=32, null=True, unique=True, verbose_name='Name')),
                ('name', models.CharField(default='Unknown', max_length=64, verbose_name='Display Name')),
                ('description', models.TextField(blank=True, help_text='Description for this host', max_length=512, null=True)),
                ('hostname', models.CharField(blank=True, help_text='FQDN Hostname this host is known by', max_length=128, null=True, verbose_name='FQDN Hostname')),
                ('primary_ip', models.GenericIPAddressField(blank=True, help_text='IP Address this Host can be reached at', null=True, verbose_name='Primary IP Address')),
                ('last_ip', models.GenericIPAddressField(blank=True, help_text='Last Known IP Address for this Host', null=True, verbose_name='Last Known IP Address')),
                ('type', models.CharField(blank=True, choices=[('none', 'Unknown'), ('vm', 'Virtual Machine'), ('bare', 'Bare Metal'), ('app', 'Appliance')], max_length=8, null=True, verbose_name='Host Type')),
                ('arch', models.CharField(blank=True, choices=[('none', 'Unknown'), ('x86', 'x86'), ('x64', 'x64'), ('arm', 'ARM')], max_length=8, null=True, verbose_name='System Architecture')),
                ('creation_date', models.DateTimeField(auto_now_add=True, help_text='The date and this host has been added.', null=True, verbose_name='Creation Date')),
                ('change_date', models.DateTimeField(auto_now=True, help_text='The date and time this host has been changed last.', null=True, verbose_name='Change Date')),
                ('common_identifiers', models.ManyToManyField(blank=True, help_text='Common Identifiers that identify this host and other hosts.', to='hostdb.CommonIdentifier', verbose_name='Common Identifiers')),
            ],
            options={
                'verbose_name': 'Host',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.SlugField(max_length=32, null=True, unique=True, verbose_name='Label')),
                ('name', models.CharField(default='Unknown', max_length=64, verbose_name='Display Name')),
                ('os_type', models.CharField(blank=True, choices=[('', 'Unknown'), ('windows', 'Windows'), ('linux', 'Linux'), ('osx', 'Mac OSX')], default='', help_text='Operating System Family this Operating System is based on', max_length=8, verbose_name='OS Family')),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('version', models.CharField(max_length=16, verbose_name='OS Version')),
                ('release_year', models.PositiveSmallIntegerField(blank=True, default=2016, help_text='Year the Operating System was released', null=True, verbose_name='Year of Release')),
            ],
            options={
                'verbose_name': 'Operating System',
                'ordering': ['os_type', 'name_short'],
            },
        ),
        migrations.CreateModel(
            name='UniqueHostIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier_type', models.CharField(choices=[('uuid', 'Unique Identification Number'), ('asset', 'Asset ID'), ('serial', 'Serial ID'), ('mac', 'MAC Address'), ('token', 'Token')], help_text='Identifier Type to uniquely identify a Host', max_length=8, verbose_name='Identifier Type')),
                ('identifier', models.CharField(max_length=128)),
                ('host', models.ForeignKey(help_text='Host to uniquely identify', on_delete=django.db.models.deletion.CASCADE, to='hostdb.Host')),
            ],
            options={
                'verbose_name': 'Unique Host Identifier',
            },
        ),
        migrations.AddField(
            model_name='host',
            name='os',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hostdb.OperatingSystem', verbose_name='Operating System'),
        ),
        migrations.AddField(
            model_name='group',
            name='hosts',
            field=models.ManyToManyField(blank=True, help_text='Hosts that are Members of this Group', to='hostdb.Host'),
        ),
        migrations.AlterUniqueTogether(
            name='commonidentifier',
            unique_together=set([('identifier_type', 'identifier')]),
        ),
        migrations.AlterUniqueTogether(
            name='uniquehostidentifier',
            unique_together=set([('identifier_type', 'identifier')]),
        ),
        migrations.AlterUniqueTogether(
            name='customsetting',
            unique_together=set([('content_type', 'object_id', 'name')]),
        ),
    ]
